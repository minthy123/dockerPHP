# docker build -t docker_php_image -f docker_php_dockerflie .
# docker run --name docker_container -v /var/run/docker.sock:/var/run/docker.sock -p 8080:8080 -p 80:80 -d docker_image 

FROM ubuntu:latest

RUN apt-get update -y
RUN apt-get install -y \
    apt-transport-https \
    ca-certificates \
    curl \
    software-properties-common

RUN curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
RUN apt-key fingerprint 0EBFCD88
RUN add-apt-repository \
   "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   stable"

RUN apt-get update -y 
RUN apt-get install -y docker-ce

##### go lang to install gotty #####
RUN apt-get update && apt-get -y dist-upgrade
RUN apt-get install -y golang git

ENV GOPATH /usr/go
RUN mkdir $GOPATH
ENV PATH $GOPATH/bin:$PATH

#### gotty #######
# This lib is used for web terminal application
# default port 8080
# can access localhost:8080 to excute
RUN go get github.com/yudai/gotty

##########
ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update && apt-get -y upgrade && apt-get -y install \
    apache2 php7.2 php7.2-curl libapache2-mod-php7.2 php7.2-sqlite3

RUN a2enmod php7.2
RUN a2enmod rewrite

RUN sed -i "s/short_open_tag = Off/short_open_tag = On/" /etc/php/7.2/apache2/php.ini
RUN sed -i "s/error_reporting = .*$/error_reporting = E_ERROR | E_WARNING | E_PARSE/" /etc/php/7.2/apache2/php.ini

# Manually set up the apache environment variables
ENV APACHE_RUN_USER www-data
ENV APACHE_RUN_GROUP www-data
ENV APACHE_LOG_DIR /var/log/apache2
ENV APACHE_LOCK_DIR /var/lock/apache2
ENV APACHE_PID_FILE /var/run/apache2.pid

# Expose apache.
EXPOSE 80
EXPOSE 8080

CMD gotty --credential minhty:AyeChanMoe123 -w /bin/bash | /usr/sbin/apache2ctl -D FOREGROUND | tail -f /dev/null 
